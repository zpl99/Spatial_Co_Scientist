**Toolset:** Combines spatial features to identify spatial relationships, which can impact accuracy.

**Tool:** Edgematch Features

**Description:**
The Edgematch Features tool is designed to modify input line features by spatially adjusting their shapes, guided by specified edgematch links, to ensure they connect with lines in an adjacent dataset. This tool is particularly useful in scenarios where linear features, such as roads or rivers, collected by different organizations or at different times, do not align at the borders of adjacent areas. By using edgematch links generated by the Generate Edgematch Links tool, the Edgematch Features tool automatically connects these disjoined features, improving data accuracy and consistency. This process is crucial in spatial analysis and GIS workflows where accurate data representation is necessary, such as in regional planning or environmental management.

**Parameters:**
- **Source Features:** The line features that will be used as edgematching source features. All edgematch links start at source features. **Type:** Feature Layer.
- **Adjacent Features:** The line features that are adjacent to the source features. All edgematch links end at matched adjacent features. **Type:** Feature Layer.
- **Output Feature Class:** The output feature class containing lines representing edgematch links. **Type:** Feature Class.
- **Search Distance:** The distance used to search for match candidates. A distance must be specified and it must be greater than zero. You can choose a preferred unit. The default is the feature unit. **Type:** Linear Unit.
- **Match Fields (Optional):** The fields from the source and target features in which the target fields are from the adjacent features. If provided, each pair of fields will be checked for match candidates to help determine the right match. **Type:** Value Table.

**Derived Output:**
- **Output Feature Class:** Contains the adjusted line features that have been edgematched to connect with adjacent features. **Type:** Feature Class.
**Toolset:** Projections and Transformations

**Tool:** Calculate Transformation Errors

**Description:**
The "Calculate Transformation Errors" tool computes residue errors and the root mean square error (RMSE) based on the coordinates of input links between known control points. This tool is crucial for assessing the accuracy of spatial data transformations by calculating residual errors. It is used in various scenarios such as:
- **Spatial Data Transformation:** Ensuring the accuracy of spatial data transformations by evaluating the fit of geometric transformations.
- **Quality Control:** Identifying and correcting spatial inaccuracies in datasets by analyzing the residual errors.
- **Data Integration:** Facilitating the integration of datasets from different sources by assessing and minimizing transformation errors.

**Parameters:**
- No specific details about input parameters are provided in the documentation for the "Calculate Transformation Errors" tool.

**Derived Output:**
- **Residue Errors:** Provides the calculated residue errors based on the coordinates of the input links. Type: Numeric.
- **Root Mean Square Error (RMSE):** A measure of the fit of the geometric transformations. Type: Numeric.
**Toolset:** Pairwise Overlay

**Tool:** Pairwise Buffer

**Description:**
The Pairwise Buffer tool creates buffer polygons around input features at a specified distance using a parallel processing approach. It is part of the Pairwise Overlay toolset, offering alternatives to classic overlay tools for enhanced performance and accuracy, especially with large and complex datasets. This tool is valuable for analyzing spatial relationships, such as assessing proximity to resources or determining areas impacted by deforestation near roads. Unlike the traditional Buffer tool, Pairwise Buffer allows adjustment of the smoothness of buffer output features through the Maximum Offset Deviation parameter.

**Parameters:**
- **Input Features**: Specifies the features to be buffered. Type: Feature Class.
- **Output Feature Class**: Defines the name and location of the output buffer feature class. Type: Feature Class.
- **Distance**: Sets the buffer distance from the input features. Type: Linear Unit.
- **Method**: Determines the buffering method, like Geodesic (shape preserving). Type: String.
- **Dissolve Type**: Specifies how output features are dissolved, for example, into a single feature. Type: String.

**Derived Output:**
- **Output Feature Class**: The resulting buffer polygons created around the input features. Type: Feature Class.
**Toolset:** Manage Data

**Tool:** Overlay Layers

**Description:**
The "Overlay Layers" tool in ArcGIS Pro is used to overlay the geometries from multiple layers into a single layer. This tool is essential for combining, erasing, modifying, or updating spatial features. It ensures that all attributes of the features involved in the overlay are carried through to the result. Typical use cases include determining what land use is on top of what soil type, identifying parcels within a floodplain, or finding roads within specific counties. This tool is crucial for spatial analysis workflows where understanding spatial relationships is necessary.

**Parameters:**
No information available.

**Derived Output:**
- **Output Layer**: The result of the overlay operation, which includes combined geometries and attributes from the input layers. Type: Feature Class.
**Toolset:** Conflation

**Tool:** Align Features

**Description:**
The "Align Features" tool identifies inconsistent portions of input features compared to target features within a search distance and aligns them with the target features. This tool helps improve the positional accuracy of spatial data by adjusting features to match the target dataset. It automatically finds spatially corresponding features from input datasets, generates adjustment links, and performs alignment. Typical use cases include aligning road networks, adjusting property boundaries, and synchronizing utility lines with survey data.

**Parameters:**
- **Input Features**: The features that need alignment. Type: Feature Layer.
- **Target Features**: The reference features for alignment. Type: Feature Layer.
- **Search Distance**: The maximum distance for searching corresponding features in the target dataset. Type: Linear Unit.

**Derived Output:**
- **Aligned Features**: The adjusted features aligned to the target features. Type: Feature Layer.
Toolset: Pairwise Overlay

Tool: Pairwise Dissolve

Description: The Pairwise Dissolve tool aggregates features based on specified attributes using a parallel processing approach. It creates new features by merging features with the same attribute values. For example, you can dissolve boundaries based on a specific attribute like State_Name to create a layer of state boundaries. The tool can also summarize attributes, such as calculating the total revenue generated in each sales region after dissolving boundaries.

Parameters:
- Input Layer: The layer containing polygon features to be dissolved. Data Type: Feature Set
- Output Name: The name of the output layer to create on your portal. Data Type: String
- Dissolve Fields: One or more fields from the input layer that control which polygons are merged based on shared attribute values. Data Type: Field
- Summary Fields: A list of field names and statistical summary types to calculate for all points within each polygon. Data Type: Field

Derived Output:
- Dissolved Layer: The output layer containing the dissolved features. Data Type: Feature Class
**Toolset:** Use Proximity

**Tool:** Create Buffers

**Description:**
The "Create Buffers" tool in ArcGIS Pro generates polygons covering a specified distance from point, line, or polygon features. It is crucial for spatial analysis tasks requiring an understanding of proximity. Examples of typical use cases include:
- **Environmental Analysis:** Identifying areas affected by pollution sources.
- **Urban Planning:** Assessing impact zones around infrastructure projects.
- **Emergency Management:** Identifying regions within a specific distance from hazard sites.

**Parameters:**
- **Input Features:** Features around which buffers are created. Type: *Feature Class*.
- **Output Feature Class:** Name and location of the output buffer feature class. Type: *Feature Class*.
- **Distance:** Buffer distance to be applied. Type: *Linear Unit*.
- **Dissolve Type:** Specifies how output features are dissolved. Type: *String*.
- **Method:** Method used to create buffers, such as planar or geodesic. Type: *String*.

**Derived Output:**
- **Output Feature Class:** Resulting buffer polygons. Type: *Feature Class*.
Toolset: Use Proximity

Tool: Snap Tracks

Description: Snap Tracks is a tool that snaps input track points to lines. It requires time-enabled point data representing an instant in time and traversable lines with fields indicating the from and to nodes for analysis. One typical use case is in scenarios where you need to align track points to specific lines accurately. For example, in transportation analysis, Snap Tracks can be used to match GPS track points to road network lines for route optimization.

Parameters:
- Input Track Points: Specifies the track points to be snapped to lines. Type: Feature Layer.
- Input Lines: Specifies the lines to which the track points will be snapped. Type: Feature Layer.

Derived Output:
- Snapped Tracks: Contains the track points snapped to the input lines. Type: Feature Layer.
Toolset: Use Proximity

Tool: Group By Proximity

Description: Group By Proximity is a tool that groups features within spatial or spatiotemporal proximity to each other. It allows for the analysis of spatial relationships between features based on their proximity in space or time. For example, it can be used to identify clusters of events that occur close to each other in both location and time, aiding in hotspot detection, pattern analysis, and anomaly identification in various GIS workflows.

Parameters:
- Input Features: The features to be grouped based on proximity. Type: Feature Layer.
- Grouping Method: The method used to group features (spatial or spatiotemporal). Type: String.
- Search Distance: The maximum distance within which features are considered to be in proximity. Type: Linear Unit.

Derived Output:
- Grouped Features: The output feature layer containing the grouped features based on proximity. Type: Feature Layer.
Toolset: Use Proximity

Tool: Trace Proximity Events

Description: Traces events that are near each other in space (location) and time. This tool is designed to answer the common spatial analysis question of "What is near what?" It works with time-enabled point data representing an instant in time to identify events that are close to each other both spatially and temporally. For example, it can be used to analyze the proximity of wildlife sightings in a specific area over time or to track the movement of vehicles in a transportation network.

Parameters:
- Input Points: The time-enabled point feature class used for tracing proximity events. Data Type: Feature Layer
- Entity ID Field: A text field representing unique IDs for each entity. Data Type: Field
- Output Name: The name of the output feature service. Data Type: String
- Distance Method: Specifies the distance type used for spatial search distance. Options include Planar and Geodesic. Data Type: String
- Spatial Search Distance (Optional): The maximum distance between two points to be considered in proximity. Data Type: Linear Unit
- Temporal Search Distance (Optional): The maximum duration between two points to be considered in proximity. Data Type: Time Unit
- Define Entities of Interest Using: Specifies the entities of interest. Options include Entity IDs and Selected features in a specified entity. Data Type: String

Derived Output:
No derived outputs available.
Toolset: Reports

Tool: Accuracy Report CSP

Description: The Accuracy Report CSP tool in ArcGIS Pro generates an accuracy report that displays various columns indicating the number of validated features, error features, unvalidated features, overall accuracy, percentage accuracy, and more. This tool is essential for data quality reporting, providing transparency to data users about the accuracy of the data. It allows users to communicate with stakeholders and interested parties regarding whether the data meets specific accuracy standards.

Parameters:
- Input geodatabase: Specifies the input geodatabase for the accuracy report. Type: Geodatabase.
- Output table: Specifies the output table where the accuracy report will be generated. Type: Table.

Derived Output:
- Accuracy Report: Contains detailed information on validated features, error features, unvalidated features, overall accuracy, percentage accuracy, and other relevant metrics. Type: Report.
Toolset: Tools related to data quality reporting and accuracy assessment, such as creating accuracy reports and validating features.

Tool: Compute Positioning Quality

Description: The Compute Positioning Quality tool in ArcGIS Pro allows you to compute the positioning quality of quality recordings to determine the accuracy of positioning data for use in ArcGIS IPS. By opening an IPS-aware map containing quality recordings and selecting the Compute Positioning Quality tool, you can assess the accuracy of positioning data. For example, you can link computed positions to unique reference positions using recording IDs, enabling a detailed analysis of positioning accuracy within your GIS workflows.

Parameters:
- Target IPS Quality Dataset: The ArcGIS IPS quality dataset created earlier. Type: Dataset.
- IPS Recordings Features: A feature layer containing quality recordings. Type: Feature Layer.
- Sight Blocking Details Features: Optional parameter for specifying sight blocking details. Type: Feature Layer.

Derived Output:
- Computed Positions: Contains indoor positions computed by the ArcGIS IPS engine. Type: Feature Class.
- Reference Positions: Stores the actual positions of the survey device. Type: Feature Class.
No information available.
**Toolset:** Quality Assessment

**Tool:** Create IPS Quality Dataset

**Description:**
The "Create IPS Quality Dataset" tool in ArcGIS Pro is designed to create a dataset that assesses the quality of an ArcGIS Indoor Positioning System (IPS) deployment. This tool generates a feature dataset within a specified workspace, which includes two essential feature classes: Reference Positions and Computed Positions. These feature classes are used to evaluate the accuracy of indoor positioning data by comparing actual positions (Reference Positions) with computed positions generated by the IPS engine. Typical use cases include validating the accuracy of indoor navigation systems, assessing the performance of IPS deployments, and ensuring data quality in spatial analysis workflows.

**Parameters:**
- **Target Workspace:** Specifies the workspace where the quality dataset will be created. Type: Workspace.
- **Spatial Reference:** Optionally provides a coordinate system for the dataset. If not specified, WGS84 is used. Type: Coordinate System.
- **Dataset Name:** The name for the dataset to be created. Type: String.

**Derived Output:**
- **Feature Dataset:** Contains the Reference Positions and Computed Positions feature classes. Type: Feature Dataset.
No information available.
Toolset: 3D Features

Tool: Adjust 3D Z

Description: The Adjust 3D Z tool modifies z-values of 3D features. It creates features for one level at a time and requires the input polylines to be at the same elevation. If the input feature layer includes polylines from more than one level, you can select features by attributes or set a definition query on the input polyline feature layer to include features from only one level, and run the tool again. If the input feature layer includes polylines from one level but some features have a different z-value, you can select the features that are at a different z-value and run the Adjust 3D Z tool to move them to the same elevation as the other features. Then rerun the tool.

Parameters:
- Input Features: The 3D features with the z-values that will be modified. Type: Feature Layer
- Reverse Sign of Z Values (Optional): Specifies whether features will be inverted along the z-axis. Options: Reverse Z Orientation, Maintain Z Orientation. Type: String
- Adjust Z Value (Optional): A numeric value or field from the input features that will be used to adjust the z of each vertex in the input features. Type: Double; Field
- Convert From Units (Optional): Specifies the existing units of the z-values. Options: Millimeters, Centimeters, Meters, Inches, Feet, Yards, Fathoms. Type: String
- Convert To Units (Optional): Specifies the units that existing z-values will be converted to. Type: String

Derived Output:
- No derived outputs available.
**Toolset:** Features

**Tool:** Add XY Coordinates

**Description:**
The Add XY Coordinates tool adds the fields POINT_X and POINT_Y to point input features and calculates their values. If the input features are z- and m-enabled, the tool also appends the POINT_Z and POINT_M fields. This tool is commonly used in spatial analysis and GIS workflows to ensure that spatial data contains explicit coordinate information. This information is essential for tasks such as mapping, spatial querying, and data validation. For instance, in a GIS workflow, you might utilize this tool to add coordinate information to a dataset of emergency response vehicles, enabling precise location tracking and analysis.

**Parameters:**
- **Input Features**: The feature class or layer to which the XY coordinates will be added. Type: Feature Layer.

**Derived Output:**
- **Updated Feature Layer**: The input feature layer with added POINT_X and POINT_Y fields, and optionally POINT_Z and POINT_M fields if applicable. Type: Feature Layer.
**Toolset:** Tools that manage coordinate accuracy and feature class ranks to ensure spatial data integrity.

**Tool:** Check Geometry

**Description:**
The Check Geometry tool is designed to identify features within a dataset that contain invalid geometry. Invalid geometry can include null or empty geometries, empty envelopes, or geometries that are not simple. This tool is particularly useful in workflows where data integrity is crucial, such as spatial analysis and GIS data management. Typical use cases include:
- Validating data before performing spatial analysis to ensure accurate results.
- Identifying and correcting geometry issues in datasets imported from third-party applications.
- Preparing data for further processing or analysis by ensuring all geometries are valid.

**Parameters:**
- **Input Features:** The feature class or layer to be checked for invalid geometry. Type: Feature Layer.

**Derived Output:**
- **Output Report:** A report detailing the geometry problems found in the input features. Type: Table.
**Toolset:** Tools that manage coordinate accuracy and feature class ranks to ensure spatial data integrity.

**Tool:** Repair Geometry

**Description:**
The Repair Geometry tool is designed to identify and correct issues with the geometry of features within a feature class. It is typically used to ensure spatial data integrity by fixing invalid geometries that can lead to incorrect analysis results or unexpected software behavior. Common use cases include:
- Correcting invalid feature geometries that may have been corrupted due to system errors or improper session termination.
- Preparing data for spatial analysis by ensuring all geometries are valid and readable.
- Fixing issues such as null geometry, short segments, self-intersections, and invalid topology.

**Parameters:**
- No information available.

**Derived Output:**
- No information available.
Toolset: Cartographic Refinement

Tool: Apply Masks From Rules

Description: The Apply Masks From Rules tool applies symbol layer masking to feature layers in a map based on an XML rule file and mask features created by the Make Mask From Rules tool. It helps configure layers to display masks correctly. For example, you can use this tool to generate polygon masks on features in aeronautical charts.

Parameters:
- Input Rule File: The XML rule file containing masking rules. Type: File.
- Mask Features: The mask features created by the Make Mask From Rules tool. Type: Feature Layer.

Derived Output:
- Masked Feature Layers: Feature layers with symbol layer masking applied based on the rules in the input rule file. Type: Feature Layer.
No information available.
Toolset: Cartographic Refinement

Tool: Apply Building Offsets

Description: Aligns the marker symbol layers of a point feature class to the nearest stroke or fill symbol layers in a line or polygon feature class within a specified search distance. It also calculates offset values for bridge features based on product specification rules defined in an .xml file.

Parameters:
- Search Distance: Specifies the distance within which the alignment of marker symbol layers to stroke or fill symbol layers occurs. Type: Double.
- Input Point Features: The point feature class whose marker symbol layers will be aligned. Type: Feature Layer.
- Input Line/Polygon Features: The line or polygon feature class containing stroke or fill symbol layers to which the marker symbol layers will be aligned. Type: Feature Layer.
- Offset Values XML File: An .xml file containing product specification rules for calculating offset values for bridge features. Type: File.

Derived Output:
- Aligned Point Features: The point feature class with marker symbol layers aligned to stroke or fill symbol layers. Type: Feature Layer.
No information available.
Toolset: **No information available.**

Tool: **No information available.**

Description: **No information available.**

Parameters: **No information available.**

Derived Output: **No information available.**
Toolset: Statistics

Tool: Tabulate Intersection

Description: Computes the intersection between two feature classes and cross tabulates the area, length, or count of the intersecting features. It is used to determine the frequency distribution of values of one input raster within zones of another. Optionally, users can check the "Consider z-values when generating intersections" parameter to utilize z-values during the intersection generation process. If checked, a z-tolerance value can be provided in the Z Tolerance parameter. Users can specify a field in the intersection feature class as a measure field using the Measure Field parameter.

Parameters:
- Input Features: The input feature classes or layers that will intersect. Only two inputs are supported. Data Type: Value Table
- Output Feature Class: The output feature class. Data Type: Feature Class
- Join Attributes (Optional): Specifies which attributes from the input features will be transferred to the output feature class. Data Type: String
- XY Tolerance (Optional): The minimum distance separating all feature coordinates. Data Type: Linear Unit
- Output Type (Optional): Specifies the type of intersections that will be returned. Data Type: String

Derived Output:
No derived outputs available.
Toolset: Analyze Patterns

Tool: Analyze Patterns

Description: The Analyze Patterns toolset contains tools that help you identify, quantify, and visualize spatial patterns in your data. These tools use distributed processing to complete analytics on your GeoAnalytics Server. Some of the tools in this toolset include Calculate Density, Create Space Time Cube, and Find Hot Spots. For example, Calculate Density calculates a magnitude-per-unit area from point features within a neighborhood around each cell, while Find Hot Spots identifies statistically significant spatial clustering of high values or low values in your data.

Parameters:
- Calculate Density: Calculates a magnitude-per-unit area from point features that fall within a neighborhood around each cell. Type: Requires ArcGIS GeoAnalytics Server.
- Create Space Time Cube: Summarizes a set of points into a netCDF data structure by aggregating them into space-time bins. Type: Requires ArcGIS GeoAnalytics Server.
- Find Hot Spots: Identifies statistically significant hot spots and cold spots using the Getis-Ord Gi* statistic. Type: Requires ArcGIS GeoAnalytics Server.

Derived Output:
- No derived outputs available.
Toolset: Tools that involve measurement accuracy, such as those dealing with parcel line dimensions and standard deviations.

Tool: Find Locations

Description: The Find Locations toolset contains tools that identify areas that meet specified criteria. The criteria can be based on attribute queries (for example, parcels that are vacant) and spatial queries (for example, within 1 kilometer of a river). The areas that are found can be selected from existing features (such as land parcels), or new features can be created where all the requirements are met. This toolset is designed for large datasets and is optimal for datasets with hundreds of thousands or millions of records. It is used to gain insight into data through patterns, trends, and anomalies in spatial analysis or GIS workflows.

Parameters:
- Input Features: Specifies the input features to search for locations. Type: Feature Layer.
- Search Criteria: Defines the criteria to identify specific areas. Type: SQL Expression.
- Output Features: Specifies the output feature class that will contain the locations found. Type: Feature Layer.

Derived Output:
- Selected Features: Features that meet the specified criteria. Type: Feature Layer.
**Toolset:** Summarize Data

**Tool:** Summarize Nearby

**Description:**
The "Summarize Nearby" tool identifies features within a specified distance from features in the input layer and calculates statistics for these nearby features. This tool is valuable in spatial analysis workflows to understand proximity relationships. For instance, it can determine the number of schools within a certain distance from residential areas or analyze the distribution of healthcare facilities around population centers.

**Parameters:**
- **Input Nearby Layer:** Point, line, or polygon features from which distances will be measured to features in the input summary layer. Type: Feature Set.
- **Input Summary Features:** Point, line, or polygon features. Features within the specified distance to features in the input nearby layer will be summarized. Type: Feature Set.
- **Output Name:** The name of the output layer to create on your portal. Type: String.
- **Distance Measurement:** Defines the type of distance measurement to use, such as straight-line distance or travel time/distance along a street network using various modes of transportation. Options include straight-line, driving distance, driving time, trucking distance, trucking time, walking distance, and walking time. Type: String.
- **Distances (Optional):** A list of double values that defines the search distance or time. You can enter a single distance value or multiple values. Type: List of Double.

**Derived Output:**
- **Output Layer:** The resulting layer containing summarized features within the specified distance. Type: Feature Set.
**Toolset:** Summarize Data

**Tool:** Summarize Within

**Description:**
The "Summarize Within" tool overlays a polygon layer with another layer to summarize the number of points, length of lines, or area of polygons within each polygon. It calculates attribute field statistics for features within the polygons. This tool is commonly used in spatial analysis to determine how much of a feature lies within another feature. For example, it can calculate how many points (such as schools or hospitals) are within a city boundary, or determine the total length of roads within a park. It is also useful for environmental studies, such as calculating the area of different land cover types within a watershed.

**Parameters:**
- **Input Polygons**: The polygon features used to summarize the input summary features. Type: Feature Layer.
- **Input Summary Features**: The features summarized within the input polygons, which can be points, lines, or polygons. Type: Feature Layer.
- **Output Feature Class**: The name of the output feature class containing the summarized data. Type: Feature Class.

**Derived Output:**
- **Output Feature Class**: Contains the summarized data with the same shapes as the input polygons, along with additional attributes summarizing the input summary features. Type: Feature Class.
**Toolset:** Tools that involve measurement accuracy, such as those dealing with parcel line dimensions and standard deviations.

**Tool:** Check Geometry

**Description:**
The Check Geometry tool is designed to identify features within a dataset that contain invalid geometry. Invalid geometry can arise from various processes, such as loading and clipping data, especially when using shapefiles generated by third-party applications. The tool is typically used in workflows that require automated data review, ensuring data integrity by finding features with null or empty geometries, empty envelopes, or geometries that are not simple. Common use cases include validating spatial data before analysis, ensuring data quality in GIS workflows, and preparing data for further processing or visualization.

**Parameters:**
- No information available.

**Derived Output:**
- **Geometry Problems Report:** Generates a report of geometry problems in a feature class. Type: Report.
Toolset: Manage Data

Tool: Manage Data

Description: The Manage Data toolset contains tools used for the day-to-day management of geographic data. GeoAnalytics Desktop tools provide a parallel processing framework for analysis on a desktop machine using Apache Spark. Through aggregation, regression, detection, and clustering, you can visualize, understand, and interact with big data. These tools work with big datasets and allow you to gain insight into your data through patterns, trends, and anomalies. The tools are integrated and run in ArcGIS Pro in the same way as other desktop geoprocessing tools.

Parameters:
- Append Data: Appends features to an existing hosted feature layer. Type: Feature Layer.
- Calculate Field: Creates a layer with calculated field values. Type: Feature Layer.
- Clip Layer: Extracts input features from within specified polygons. Type: Feature Layer.
- Copy To Data Store: Copies features from the input to a new feature service in your portal. Type: Feature Layer.
- Dissolve Boundaries: Finds polygons that intersect or have the same field values and merges them to form a single polygon. Type: Feature Layer.
- Merge Layers: Combines feature layers to create a single output layer. Type: Feature Layer.
- Overlay Layers: Overlays the geometries from multiple layers into a single layer. Overlay can be used to combine, erase, modify, or update spatial features. Type: Feature Layer.

Derived Output:
- Appended Features: Features appended to the existing hosted feature layer. Type: Feature Layer.
Toolset: Data Enrichment

Tool: Calculate Motion Statistics

Description: Calculates motion statistics for points in a time-enabled feature class. This tool is designed for large datasets and uses distributed processing to complete analytics on your GeoAnalytics Server.

Parameters:
- Input Features: The point features for which motion statistics will be calculated. Type: Feature Layer.
- Time Field: The field that contains the time information for each point. Type: Field.

Derived Output:
- Output Features: The updated point features with calculated motion statistics. Type: Feature Layer.
Toolset: Use Proximity

Tool: Create Buffers

Description: The Create Buffers tool creates buffers around input features to a specified distance. It is used to answer spatial analysis questions related to proximity. For example, it can be used to create buffers around tourist attractions to indicate the closest rail station, helping in tourism planning and transportation analysis.

Parameters:
- Input Features: The features for which buffers will be created. Type: Feature Layer.
- Output Feature Class: The name and location for the output feature class. Type: Feature Class.
- Distance: The distance for buffer creation. Type: Linear Unit.

Derived Output:
- Output Feature Class: The feature class containing the created buffers. Type: Feature Class.
**Toolset:** Tools that involve measurement accuracy, such as those dealing with parcel line dimensions and standard deviations.

**Tool:** Calculate Geometry Attributes

**Description:**
The "Calculate Geometry Attributes" tool is used to add information to a feature's attribute fields that represent the spatial or geometric characteristics and location of each feature. This includes attributes such as length, area, and x-, y-, z-coordinates, and m-values. This tool is typically used in spatial analysis or GIS workflows to enhance the dataset with geometric properties that can be used for further analysis or visualization. For example, it can be used to calculate the area of polygons for land use analysis, determine the length of lines for infrastructure planning, or extract the centroid coordinates of features for spatial modeling.

**Parameters:**
- **Input Features:** The input features to which new attribute fields will be added to store properties such as length, area, or x-, y-, z-, and m-coordinates. **Type:** Feature Layer.
- **Geometry Properties:** Specifies the geometry or shape properties that will be calculated into new attribute fields. Options include:
  - Area: An attribute will be added to store the area of each polygon feature.
  - Geodesic area: An attribute will be added to store the shape-preserving geodesic area of each polygon feature.
  - Centroid coordinates: Attributes will be added to store the centroid coordinates of each feature.
  - Central point coordinates: Attributes will be added to store the coordinates of a central point inside or on each feature.
  - Extent coordinates: Attributes will be added to store the extent coordinates of each feature.
  - Length: An attribute will be added to store the length of each line feature.
  - Geodesic length: An attribute will be added to store the shape-preserving geodesic length of each line feature.
  - 3D length: An attribute will be added to store the 3D length of each line feature.
  - Line bearing: An attribute will be added to store the start-to-end bearing of each line feature. Values range from 0 to 360, with 0 meaning north, 90 east.

**Derived Output:**
- The tool does not explicitly list derived outputs, but it modifies the input feature class by adding new fields with calculated geometric attributes.
Toolset: Summarize Data

Tool: Summarize Data

Description: The Summarize Data toolset includes tools that calculate total counts, lengths, areas, and basic descriptive statistics of features and their attributes within areas or near other features. These tools are designed to work with big datasets, allowing users to gain insights into their data through patterns, trends, and anomalies. For example, the Summarize Within tool calculates the area of polygons within another layer's polygons. This toolset is ideal for spatial analysis and GIS workflows where detailed statistical information is required.

Parameters:
- Input Layer: The point, line, or polygon layer to be summarized. Type: Feature Set
- Output Name: The name of the output feature service. Type: String
- Generate Types: Specifies the summary types to be generated, such as Central Feature, Mean Center, Median Center, and Ellipse. Type: String
- Ellipse Size (Optional): Specifies the size of output ellipses in standard deviations. Type: String
- Weight Field (Optional): A numeric field used to weight locations according to their relative importance. Type: Field
- Group By Field (Optional): The field used to group the summary results. Type: Field

Derived Output:
- Summarize Raster Within: Calculates statistics on values of a raster within the zones of another dataset. Type: Raster Dataset
- Zonal Statistics As Table: Calculates the values of a raster within the zones of another dataset and reports the results in a table format. Type: Table
Toolset: Tools that handle survey measurements and COGO data, which are critical for maintaining high accuracy in spatial datasets.

Tool: Spiral Curve

Description: Spiral Curve construction methods in the Create Features pane allow for creating spiral curves as densified polylines. A spiral curve is defined by a fixed start point and a radius that changes proportionately to its distance on the arc from the start point. It is commonly used in roadway and railroad design to transition vehicles safely into or out of circular paths or straight lines.

Parameters:
- Start Bearing: Specifies the start bearing of the spiral curve. Type: Double.
- Start Radius: Defines the start radius of the spiral curve. Type: Double.
- End Radius: Indicates the end radius of the spiral curve. Type: Double.
- Arc Length or Delta Angle: Specifies the length of the spiral as an arc length or a delta angle. Type: Double.
- Densify by: Determines how the spiral curve is densified. Options include Deviation, Angle, and Length. Type: String.

Derived Output:
- Spiral Curve: The resulting spiral curve as a densified polyline. Type: Polyline.
Toolset: Coordinate Geometry (COGO) and Ground to Grid Correction

Tool: Ground to grid distance factor

Description: The Ground to grid distance factor tool is used to specify a distance factor that scales ground distance values to grid distances when creating geometry. For example, setting a distance factor of 0.95 and entering a ground distance of 100 feet using a ground to grid-aware tool will constrain the new segment to 95 feet. This tool is essential for maintaining accuracy in spatial datasets, especially when dealing with COGO-enabled features and ground to grid correction settings.

Parameters:
- Basis of Bearing: Specifies the basis of bearing or convergence angle for a survey. Type: String.
- Distance Factor: Specifies the user-defined multiplier for converting ground distances to grid distances. Type: Double.
- Z-Factor: Specifies the number of ground x,y units in one surface z-unit. Type: Double.
- Slope and Aspect Input Type: Specifies how slope and aspect information will be derived for analysis. Type: String.
- Calculation Directions: Specifies the number of azimuth directions used in calculations. Type: Integer.

Derived Output:
- N/A
**Toolset:** Tools that handle survey measurements and COGO data

**Tool:** Direction/Distance

**Description:**
The Direction/Distance tool in ArcGIS Pro creates a vertex at a specified direction and distance from an existing vertex. This tool is particularly useful in creating line or polygon feature geometry with precision, ensuring high accuracy in spatial datasets. It is commonly used in workflows involving survey measurements and COGO data, where maintaining spatial accuracy is critical. For example, when creating z-aware features, the tool allows specifying the pitch parameter for 3D angular pitch in the z-direction. Additionally, if ground to grid corrections are enabled, the tool automatically rotates and scales the calculated values based on current correction settings. This tool is beneficial in scenarios such as mapping property boundaries, infrastructure planning, and any spatial analysis requiring precise directional and distance measurements.

**Parameters:**
- **Direction:** Specifies the horizontal direction from the last vertex. Type: *String*.
- **Distance:** Specifies the distance from the last vertex. Type: *Double*.
- **Pitch (optional):** Specifies the 3D angular pitch in the z-direction for z-aware features. Type: *Double*.

**Derived Output:**
- **Vertex:** The tool creates a vertex at the specified direction and distance. Type: *Feature Layer*.
Toolset: Tools that handle survey measurements and COGO data

Tool: Intersection tools

Description:
The Intersection tools in ArcGIS Pro use analytic geometry to locate and snap the pointer to computed locations where two geometric elements intersect. These tools are particularly useful in spatial analysis and GIS workflows for creating precise intersection points between various geometric features. For example, they can be used to create a point or vertex where two distances intersect, where a direction and a distance intersect, or where two directions intersect. These tools are available on the construction toolbar when drawing a feature using a feature construction tool. They are also ground to grid-aware, meaning they can compute input values as ground measurements, applying an offset angle to directions and a distance factor to distances in real-time as construction measurements are specified.

Parameters:
- **Input Features**: The input feature classes or layers that will intersect. Only two inputs are supported. Type: *Value Table*.
- **Output Feature Class**: The output feature class. Type: *Feature Class*.
- **Join Attributes (Optional)**: Specifies which attributes from the input features will be transferred to the output feature class. Type: *String*.
- **XY Tolerance (Optional)**: The minimum distance separating all feature coordinates. Type: *Linear Unit*.
- **Output Type (Optional)**: Specifies the type of intersections that will be returned. Type: *String*.

Derived Output:
- **Output Feature Class**: The registered output point feature class that will be m- and z-enabled. This feature class will contain the intersections. Type: *Feature Class*.
No information available.
**Toolset:** Tools that handle survey measurements and COGO data

**Tool:** Enable COGO

**Description:**
The Enable COGO tool adds COGO attribute fields and COGO-enabled labeling to a polyline feature class. COGO fields are used to store survey measurements entered into COGO-aware editing tools. Enabling COGO is essential for workflows requiring precise survey data integration into GIS systems, enabling accurate spatial analysis and mapping. For instance, it is valuable in land surveying projects for precise boundary measurements and infrastructure projects for aligning features accurately. When enabling COGO, consider converting survey dimensions to grid measurements by activating ground to grid correction.

**Parameters:**
- **Input Line Features**: The line feature layer where COGO fields and labeling are added. Type: Feature Layer.

**Derived Output:**
- **COGO Fields**: Fields added to the feature class to store survey measurements. Type: Attribute Fields.
No information available.
**Toolset:** Tools that handle survey measurements and COGO data

**Tool:** Circular Arc

**Description:**
The Circular Arc tool creates two-point tangent or non-tangent circular arc segments based on specified parameters. It is accessible from the context menu when a polyline or polygon feature construction tool is active in the Create Features pane. This tool is essential for tasks requiring precise geometric constructions, such as in land surveying and civil engineering projects. When using the Circular Arc tool, vertices for 3D z-aware features are assigned z-values based on the current elevation settings. Additionally, when creating two-point COGO enabled lines, the direction and distance values entered are stored with the feature, ensuring accurate representation of spatial data.

**Parameters:**
- **Start Point:** The initial point of the arc. Type: Coordinate.
- **Through Point:** A point through which the arc passes. Type: Coordinate.
- **End Point:** The final point of the arc. Type: Coordinate.
- **Radius:** The radius of the arc. Type: Double.

**Derived Output:**
- **Arc Segment:** The resulting circular arc segment. Type: Geometry.

The Circular Arc tool is crucial for maintaining high accuracy in spatial datasets, especially when mapping parcel boundaries or features that require curved paths.
No information available.
**Toolset:** Tools that handle survey measurements and COGO data, which are critical for maintaining high accuracy in spatial datasets.

**Tool:** Distance

**Description:**
The Distance tool in ArcGIS Pro is designed to perform spatial analysis by calculating distances between features. It can handle both straight-line (Euclidean) distances and weighted distances, which account for various factors such as barriers, surface texture, and travel mode. This tool is essential for maintaining high accuracy in spatial datasets, especially when dealing with survey measurements and COGO data. Typical use cases include:
- Calculating the shortest path between two points, considering obstacles like rivers or buildings.
- Determining the optimal route for transportation networks, factoring in terrain and travel restrictions.
- Analyzing proximity to critical infrastructure, such as electrical substations.

**Parameters:**
- **Linear Unit:** Specifies the unit of measurement for distance calculations. Type: String.
- **X Distance:** The horizontal distance component. Type: Double.
- **Y Distance:** The vertical distance component. Type: Double.

**Derived Output:**
- **Output Feature Layer:** The modified input feature layer, which is derived and dependent on the input feature layer. Type: Feature Layer.
No information available.
No information available.
No information available.
No information available.
**Toolset:** Classification and Pattern Recognition

**Tool:** Compute Confusion Matrix

**Description:**
The Compute Confusion Matrix tool evaluates the accuracy of a classification by comparing the classified map to reference data. It generates a confusion matrix, displaying errors of omission and commission, and calculates metrics like the kappa index of agreement, Intersection over Union (IoU), and overall accuracy. This tool is crucial in spatial analysis workflows for assessing classification accuracy, such as in land cover mapping or change detection studies. For example, it can be used to assess the accuracy of urban area classification in satellite imagery by comparing classified data to ground truth data.

**Parameters:**
- **Input Accuracy Assessment Points**: Points used for accuracy assessment, containing both classified and ground truth data. **Type:** Feature Class.
- **Output Confusion Matrix**: A table storing confusion matrix results. **Type:** Table.

**Derived Output:**
- **Confusion Matrix Table**: Contains the confusion matrix with metrics like errors of omission and commission, kappa index, IoU, and overall accuracy. **Type:** Table.
Toolset: Classification and Pattern Recognition

Tool: Compute Confusion Matrix

Description: Computes a confusion matrix with errors of omission and commission and derives a kappa index of agreement, Intersection over Union (IoU), and an overall accuracy between the classified map and the reference data. After creating accuracy assessment points and populating their attributes with ground truth data, the confusion matrix compares the Classified and GrndTruth attributes to determine the accuracy percentage. For example, if areas classified as impervious match actual impervious areas in the original imagery, the confusion matrix will show high accuracy.

Parameters:
- Input Accuracy Assessment Points: The accuracy assessment point feature class created from the Create Accuracy Assessment Points tool, containing the Classified and GrndTruth fields. Data Type: Feature Layer
- Output Confusion Matrix: The output file name of the confusion matrix in table format. The format of the table is determined by the output location and path. By default, the output will be a geodatabase table. If the path is not in a geodatabase, specify the .dbf extension to save it in dBASE format. Data Type: Table

Derived Output:
- No derived outputs available.
Toolset: Classification and Pattern Recognition

Tool: Compute Confusion Matrix

Description: The Compute Confusion Matrix tool computes a confusion matrix with errors of omission and commission. It derives a kappa index of agreement, Intersection over Union (IoU), and overall accuracy between the classified map and the reference data. This tool is essential for assessing the accuracy of a classified map by comparing it to a reference data source. For example, it helps determine the percentage of accuracy between the Classified and GrndTruth attributes of accuracy assessment points, indicating the classification accuracy. 

Parameters:
- Input Accuracy Assessment Points: The accuracy assessment point feature class created from the Create Accuracy Assessment Points tool, containing the Classified and GrndTruth fields. Data Type: Feature Layer
- Output Confusion Matrix: The output file name of the confusion matrix in table format. The format of the table is determined by the output location and path. By default, the output will be a geodatabase table. If the path is not in a geodatabase, specify the .dbf extension to save it in dBASE format. Data Type: Table

Derived Output:
No derived outputs available.
**Toolset:** Classification and Pattern Recognition

**Tool:** Compute Confusion Matrix

**Description:**
The "Compute Confusion Matrix" tool is used to evaluate the accuracy of a classified map by comparing it to reference data. It calculates a confusion matrix, which includes errors of omission and commission, and derives metrics such as the kappa index of agreement, Intersection over Union (IoU), and overall accuracy. This tool is essential in assessing the performance of classification algorithms in spatial analysis workflows. For example, it can be used to determine how accurately a land cover classification map represents actual ground conditions by comparing classified data with ground truth data.

**Parameters:**
- **Input Accuracy Assessment Points:** The feature class containing the accuracy assessment points, which includes the "Classified" and "GrndTruth" fields. These fields are long integer types. **Type:** Feature Layer.

**Derived Output:**
- **Output Confusion Matrix:** The resulting confusion matrix table, which can be saved in a geodatabase or as a .dbf file. **Type:** Table.
Toolset: Tools like "Create Accuracy Assessment Points," "Update Accuracy Assessment Points," and "Compute Confusion Matrix" are used to assess the accuracy of classified imagery.

Tool: Create Accuracy Assessment Points

Description: The Create Accuracy Assessment Points tool is used in a two-step process for accuracy assessment of classified imagery. It generates reference points for accuracy assessment. For example, in a GIS workflow, this tool can be used to create random points for assessing the accuracy of a land cover classification.

Parameters:
- Number of Random Points: Specifies the total number of random points generated for accuracy assessment. Type: Integer.
- Sampling Strategy: Specifies the method used for sampling. Type: String.

Derived Output:
- N/A
Toolset: Image Analyst

Tool: Update Accuracy Assessment Points

Description: The Update Accuracy Assessment Points tool is used in the two-step process for accuracy assessment of classified imagery. It allows for updating accuracy assessment points based on the classification results. For example, after creating accuracy assessment points, this tool can be used to modify or refine them based on the classification output, ensuring a more accurate assessment of the classification results in spatial analysis or GIS workflows.

Parameters:
- polygon_dimension_field: Specifies the field that contains the polygon dimensions. Type: Field
- point_dimension_field: Specifies the field that contains the point dimensions. Type: Field

Derived Output:
No information available.
Toolset: Topology

Tool: Export Topology Errors

Description: The Export Topology Errors tool exports errors and exceptions from a geodatabase topology to the target geodatabase. It allows for the export of all information associated with the errors and exceptions, including the features referenced by the error or exception. Once exported, the feature classes can be accessed using any license level of ArcGIS. This tool enables users to work with the Select Layer By Location tool and share the feature classes with other users who do not have access to the topology. 

Parameters:
- Input Topology: Specifies the geodatabase topology from which errors and exceptions will be exported. Type: Geodatabase Topology
- Target Geodatabase: Specifies the target geodatabase where the errors and exceptions will be exported. Type: Geodatabase

Derived Output:
- Exported Feature Classes: Contains the errors and exceptions exported from the geodatabase topology. Type: Feature Class
**Toolset:** Topology

**Tool:** Create Topology

**Description:**
The "Create Topology" tool in ArcGIS Pro is used to establish a topology within a geodatabase. This tool is essential for ensuring data integrity by defining and maintaining spatial relationships between features such as points, lines, and polygons. It is typically used in workflows that require the validation of spatial relationships to ensure accuracy and consistency in geographic data. For example, it can be used to ensure that adjacent polygons share a common boundary without gaps or overlaps, or to maintain connectivity in a network of roads or utilities. This tool is crucial in scenarios where spatial data accuracy is paramount, such as urban planning, environmental management, and infrastructure development.

**Parameters:**
- **Input Feature Dataset**: The feature dataset where the topology will be created. Type: Feature Dataset.
- **Output Topology**: The name of the topology to be created. Type: Topology.
- **Cluster Tolerance**: The distance within which vertices are considered coincident. Type: Double.
- **Rank**: The accuracy rank for each feature class in the topology. Type: Integer.

**Derived Output:**
- **Topology**: The created topology within the specified feature dataset. Type: Topology.
**Toolset:** Topology Toolset

**Tool:** Remove Rule From Topology

**Description:**
The "Remove Rule From Topology" tool allows users to remove a specific rule from a geodatabase topology. This tool is essential for managing spatial data integrity by enabling users to modify the rules governing spatial relationships within a topology. Common use cases include updating rules as data requirements change or correcting errors in existing topology rules. For instance, if a rule like "Must Not Have Dangles" is no longer relevant to a dataset, it can be removed to avoid unnecessary validation errors.

**Parameters:**
- **Topology**: The path to the topology from which the rule will be removed. Type: *String*.
- **Rule**: The specific rule to be removed, identified by its name and ObjectClassID. Type: *String*.

**Derived Output:**
- No derived outputs are specified for this tool.
Toolset: Topology

Tool: Add Rule To Topology

Description: The Add Rule To Topology tool allows users to add a rule to a topology. Topology rules help structure spatial relationships between features and control how features share geometry. Users can run this tool multiple times to add all desired topology rules to the topology. By adding rules, users can validate and maintain better feature representations in a geodatabase. For example, users can create rules to ensure boundaries are covered by other boundaries or to define how features share geometry.

Parameters:
- Input Topology: Specifies the location of the topology where the rule will be added. Type: Feature Layer.
- Rule: Specifies the rule to be added, such as "Boundary Must Be Covered By Boundary Of (Area-Area)". Type: String.
- Origin Feature Class: Specifies the path to the origin feature class. Type: Feature Class.
- Origin Subtype: Specifies the subtype for the input or origin feature class. Type: String.
- Destination Feature Class: Specifies the path to the destination feature class. Type: Feature Class.
- Destination Subtype: Specifies the subtype description for the destination feature class. Type: String.

Derived Output:
- New Rule: Represents the newly added rule to the topology. Type: Rule.
**Toolset:** Topology

**Tool:** Add Feature Class To Topology

**Description:**
The "Add Feature Class To Topology" tool in ArcGIS Pro is used to incorporate a feature class into an existing topology within a geodatabase. This tool is essential for ensuring data integrity by validating spatial relationships and maintaining accurate feature representations. Typical use cases include:
- **Spatial Analysis:** Ensuring that spatial relationships such as adjacency and connectivity are maintained between features.
- **Data Integrity:** Validating and maintaining the geometric integrity of features within a geodatabase.
- **GIS Workflows:** Automating the process of adding multiple feature classes to a topology, which is crucial for large datasets or complex spatial models.

**Parameters:**
- **Input Topology:** The path to the topology where the feature class will be added. Type: *Topology*.
- **Input Feature Class:** The feature class to be added to the topology. It must be within the same feature dataset and not currently participating in another topology or geometric network. Type: *Feature Class*.
- **XY Coordinate Rank:** The rank for the x,y coordinates of the feature class, which determines its influence in the topology. Type: *Integer*.
- **Z Coordinate Rank:** The rank for the z coordinates of the feature class, similar to the XY Coordinate Rank. Type: *Integer*.

**Derived Output:**
- **Updated Topology:** The topology with the newly added feature class. Type: *Topology*.
**Toolset:** Topology

**Tool:** Remove Feature Class From Topology

**Description:**
The "Remove Feature Class From Topology" tool is used to remove a feature class from an existing topology within a geodatabase. This tool is essential for managing and maintaining the integrity of spatial data by allowing users to modify the composition of a topology as needed. Typical use cases include updating a topology when a feature class is no longer relevant or needs to be replaced, ensuring that only necessary data is included in spatial analyses, and maintaining data integrity by removing outdated or incorrect feature classes. For example, in a city planning scenario, if a particular road network feature class is outdated, it can be removed from the topology to prevent it from affecting spatial analyses like connectivity or adjacency checks.

**Parameters:**
- **Topology**: The path to the topology containing the feature class to be removed. Type: *Topology*.
- **Feature Class to Remove**: The location of the feature class that you want to remove from the topology. Type: *Feature Class*.

**Derived Output:**
No derived outputs are specified for this tool.
Toolset: No information available.

Source documentation does not provide specific information about a tool named "Set Cluster Tolerance" within a toolset related to validating spatial relationships and ensuring data integrity.
**Toolset:** Topology

**Tool:** Validate Topology

**Description:**
The Validate Topology tool in ArcGIS Pro ensures data integrity by validating features in a topology against predefined topology rules. It is crucial for maintaining spatial relationships and data accuracy within a geodatabase. This tool identifies and reports errors where the spatial integrity of the topology is compromised, enabling users to correct these errors and uphold high-quality data. Examples of typical use cases include:
- Ensuring that adjacent polygons do not overlap.
- Verifying that lines connect properly at nodes.
- Checking that points are properly contained within polygons.

**Parameters:**
- **Input Topology**: The topology to be validated. This can be a topology layer from a feature service or a local dataset. Type: Topology Layer.

**Derived Output:**
- **Validation Result**: Describes the result of the validation operation, including any errors found. Type: ValidationResult.

The Validate Topology tool is valuable in workflows where maintaining spatial data integrity is critical, such as urban planning, environmental management, and infrastructure development. It aids in efficiently identifying and resolving spatial errors, thereby supporting robust spatial analysis and decision-making processes.
Toolset: Find Locations

Tool: Find Similar Locations

Description: The Find Similar Locations tool identifies candidate features that are most similar or dissimilar to one or more input features based on feature attributes. This tool is useful for comparing places, determining relationships between locations, finding optimal locations, detecting patterns, and making predictions in spatial analysis or GIS workflows.

Parameters:
- Input Features: Specifies the input features for which similar locations will be identified. Type: Feature Layer.
- Candidate Features: Specifies the candidate features to compare against the input features. Type: Feature Layer.
- Output Features: Specifies the name for the output feature class that will contain the identified similar locations. Type: Feature Class.
- Number Of Results: Specifies the number of results to be returned. Type: Integer.

Derived Output:
- Transmission_Risk: Contains the identified candidate features that are most similar or dissimilar to the input features based on attribute values. Type: Feature Class.
Toolset: Analyze Patterns

Tool: Find Locations

Description: The Find Locations toolset contains tools that identify areas meeting specified criteria based on attribute and spatial queries. These tools can select existing features or create new ones based on the requirements.

Parameters:
- Detect Incidents: Creates a layer detecting features meeting specific conditions.
- Find Dwell Locations: Identifies locations where moving objects have stopped using time and distance thresholds.
- Find Similar Locations: Identifies features similar or dissimilar to input features based on attributes.

Derived Output:
No information available.
Toolset: Find Locations

Tool: Find Locations

Description: The Find Locations toolset contains tools that identify areas meeting specific criteria based on attribute and spatial queries. These areas can be selected from existing features or new features created when requirements are met. For example, it can be used to find parcels that are vacant or areas within a certain distance of a river.

Parameters:
- Input Criteria: Specifies the criteria for identifying areas. Type: String.
- Spatial Query Distance: Defines the distance for spatial queries. Type: Double.
- Attribute Query: Specifies the attribute query to be applied. Type: String.

Derived Output:
- Selected Areas: Areas that meet the specified criteria. Type: Feature Class.
- New Features: Newly created features that meet all requirements. Type: Feature Class.
Toolset: Find Locations

Tool: Detect Incidents

Description: Creates a layer that detects features that meet a given condition. This tool is used to identify areas that meet specified criteria based on attribute and spatial queries. For example, it can identify parcels that are vacant or areas within a certain distance of a river.

Parameters:
- Input Features: Specifies the features to be analyzed. Type: Feature Layer.
- Condition: Defines the condition that features must meet to be detected. Type: SQL Expression.

Derived Output:
- Detected Incidents: A layer containing features that meet the specified condition. Type: Feature Layer.
Toolset: Manage Data

Tool: Manage Data

Description: The Manage Data toolset contains tools for both the day-to-day management of geographic data and for combining and overlaying data as part of spatial analysis. These tools are used for tasks such as creating a layer with calculated field values, extracting input features from within specified polygons, finding polygons that overlap or share a common boundary and merging them, copying features from one layer to another, combining feature layers into a single output layer, and overlaying geometries from multiple layers into a single layer.

Parameters:
- Calculate Field: Creates a layer with calculated field values. Type: Field
- Clip Layer: Extracts input features from within specified polygons. Type: Feature Layer
- Dissolve Boundaries: Finds polygons that overlap or share a common boundary and merges them to form a single polygon. Type: Feature Layer
- Overlay Layers: Overlays the geometries from multiple layers into a single layer. Type: Feature Layer

Derived Output:
- None available.
Toolset: Use Proximity

Tool: Create Buffers

Description: The Create Buffers tool generates polygons that extend a specified distance from a point, line, or polygon feature. It is commonly used to create buffer zones around features for spatial analysis. For example, it can be used to create a 1-mile buffer around schools to analyze areas within a certain distance for safety assessments.

Parameters:
- Input Features: Specifies the features for which buffers will be created. Type: Feature Layer.
- Output Feature Class: Defines the output location and name for the buffer polygons. Type: Feature Class.
- Distance: Determines the buffer distance around the input features. Type: Linear Unit.

Derived Output:
- Buffer Polygons: Resulting polygons representing the buffer zones around the input features. Type: Feature Class.
Toolset: Use Proximity

Tool: Create Buffers

Description: Creates polygons that cover a given distance from a point, line, or polygon feature. 

Parameters:
- Input Features: Specifies the point, line, or polygon features from which buffers will be created. Type: Feature Layer.
- Output Feature Class: The name of the output feature class containing the buffer polygons. Type: Feature Class.
- Distance: The distance around the input features to create the buffers. Type: Linear Unit.

Derived Output:
No derived outputs available.
Toolset: Summarize Data

Tool: Summarize Data

Description: The Summarize Data toolset contains tools that calculate total counts, lengths, areas, and basic descriptive statistics of features and their attributes within areas or near other features. For example, the tool "Aggregate Points" aggregates points into polygon features or bins, returning a polygon with a count of points and optional statistics at all point locations. Another tool, "Describe Dataset," summarizes features into calculated field statistics, sample features, and extent boundaries. "Join Features" joins attributes from one layer to another based on spatial, temporal, or attribute relationships. "Reconstruct Tracks" creates line or polygon tracks from time-enabled input data. "Summarize Attributes" calculates summary statistics for fields in a feature class. "Summarize Center And Dispersion" finds central features and directional distributions, calculating mean and median locations from the input. "Summarize Within" calculates how much area of polygons in one layer lies within the polygons of another layer.

Parameters:
- Aggregate Points: Aggregates points into polygon features or bins. Type: Feature Layer.
- Describe Dataset: Summarizes features into calculated field statistics, sample features, and extent boundaries. Type: Feature Layer.
- Join Features: Joins attributes from one layer to another based on spatial, temporal, or attribute relationships. Type: Feature Layer.
- Reconstruct Tracks: Creates line or polygon tracks from time-enabled input data. Type: Feature Layer.
- Summarize Attributes: Calculates summary statistics for fields in a feature class. Type: Feature Layer.
- Summarize Center And Dispersion: Finds central features and directional distributions and calculates mean and median locations from the input. Type: Feature Layer.
- Summarize Within: Calculates how much area of polygons in one layer lies within the polygons of another layer. Type: Feature Layer.

Derived Output:
- Aggregate Points: Aggregates points into polygon features or bins. Type: Feature Layer.
- Describe Dataset: Summarizes features into calculated field statistics, sample features, and extent boundaries. Type: Feature Layer.
- Join Features: Joins attributes from one layer to another based on spatial, temporal, or attribute relationships. Type: Feature Layer.
- Reconstruct Tracks: Creates line or polygon tracks from time-enabled input data. Type: Feature Layer.
- Summarize Attributes: Calculates summary statistics for fields in a feature class. Type: Feature Layer.
- Summarize Center And Dispersion: Finds central features and directional distributions and calculates mean and median locations from the input. Type: Feature Layer.
- Summarize Within: Calculates how much area of polygons in one layer lies within the polygons of another layer. Type: Feature Layer.
Toolset: Statistics

Tool: Median

Description: The Median tool is a measure of central tendency that is robust to outliers. It identifies the location that minimizes travel from it to all other features in the dataset. For example, if you were to compute the Mean Center for a compact cluster of points, the result would be a location at the center of the cluster. If you then added a new point far away from the cluster and recomputed the Mean Center, you would notice that the result would be pulled toward the new outlier. However, when using the Median tool, the new outlier has a much smaller impact on the result location. The Median tool allows you to specify a Weight Field, where weights represent the number of trips associated with each feature. The weighted median center is the location that minimizes distance for all trips.

Parameters:
- Input Features: The features to be aggregated. Type: Feature Layer
- Output Feature Class: The feature class to be created that will contain the aggregated features. Type: Feature Class
- Dissolve Fields (Optional): The field or fields on which features will be aggregated. Type: Field
- Field Statistics Fields (Optional): Specifies the field or fields containing the attribute values used to calculate the specified statistic. Type: Field

Derived Output:
- Median Center: The output point feature class that contains features representing the median centers of the input layer. Type: Feature Class
No information available.
**Toolset:** Summarize Data

**Tool:** Summarize Nearby

**Description:**
The "Summarize Nearby" tool identifies features within a specified distance from features in the input layer and calculates statistics for these nearby features. Distance can be measured as a straight-line distance, drive-time distance, or drive distance. This tool is particularly useful in spatial analysis workflows where understanding the proximity and influence of features is crucial. For example, it can be used to determine the number of schools within a certain radius of a residential area or calculate the average income of households within a 10-minute drive from a shopping center.

**Parameters:**
- **Input Layer:** The layer containing features from which nearby features will be summarized. Type: Feature Layer.
- **Nearby Layer:** The layer containing features to be summarized. Type: Feature Layer.
- **Distance:** The distance within which features will be summarized. Type: Linear Unit.
- **Distance Type:** Specifies whether the distance is straight-line, drive-time, or drive distance. Type: String.

**Derived Output:**
- **Output Feature Class:** A new feature class containing the summarized statistics of nearby features. Type: Feature Class.
**Toolset:** Summarize Data

**Tool:** Summarize Within

**Description:**
The "Summarize Within" tool overlays a polygon layer with another layer to summarize the number of points, length of the lines, or area of the polygons within each polygon. It calculates attribute field statistics for those features within the polygons. This tool is typically used in spatial analysis to understand the distribution and characteristics of features within defined areas. For example, it can be used to calculate the total area of forested land within administrative boundaries or to determine the number of schools within each city district.

**Parameters:**
- **Input Polygons**: The polygon features that define the areas to summarize. Type: Feature Layer.
- **Input Summary Features**: The features to be summarized within the input polygons. Type: Feature Layer.
- **Output Feature Class**: The name of the output feature class that will contain the results. Type: Feature Class.

**Derived Output:**
- **Output Feature Class**: Contains the summarized statistics of the input summary features within each input polygon. Type: Feature Class.
No information available.
Toolset: Summarize Data

Tool: Standard Deviation

Description: The Standard Deviation tool calculates the extent of value deviation in a specified field. It is used to find the variability or spread of values within the data. For example, in a dataset representing temperatures across different locations, the standard deviation can help identify how much each temperature measurement deviates from the mean temperature, providing insights into the data's variability.

Parameters:
- Input Table: The table containing the field with the values that will be standardized. Type: Table View; Raster Layer; Mosaic Layer.
- Field to Standardize: The fields containing the values that will be standardized. For each field, an output field name can be specified. If no output field name is provided, the tool will create an output field name using the field name and selected method. Type: Value Table.
- Standardization Method (Optional): Specifies the method used to standardize the values in the specified fields. Options include Z-Score, Minimum-maximum, Absolute maximum, and Robust standardization. Type: String.

Derived Output:
- Standard Deviation: Finds the extent of value deviation in the specified field. Type: Double.
Toolset: Summarize Data

Tool: Sum

Description: The Sum tool is part of the Summarize Data toolset, which contains tools that calculate total counts, lengths, areas, and basic descriptive statistics of features and their attributes within areas or near other features. The Sum tool specifically calculates the sum of values for a specified field in a feature class. For example, it can be used to find the total sum of a numeric attribute field in a dataset.

Parameters:
- Input Features: The features to be aggregated. Data Type: Feature Layer
- Output Feature Class: The feature class to be created that will contain the aggregated features. Data Type: Feature Class
- Dissolve Fields (Optional): The field or fields on which features will be aggregated. Data Type: Field
- Statistics Fields (Optional): Specifies the field or fields containing the attribute values that will be used to calculate the sum statistic. Multiple statistic and field combinations can be specified. Null values are excluded from all calculations. By default, the tool will calculate the sum statistic. Data Type: Numeric attribute fields

Derived Output:
- Sum: The total sum of the specified field values. Data Type: Numeric
Toolset: Statistics

Tool: Range

Description: The Range tool creates a set of concentric circles or rings around a point, allowing users to specify the method for generating the range rings. It can be used to determine the proximity of features within one or more feature classes or between two feature classes. The tool is useful for visualizing spatial relationships and can be applied in various scenarios such as determining distances from a given point or analyzing spatial patterns.

Parameters:
- Input Features (Center Points): The point feature set identifying the center of the range ring. Input must contain at least one point. Type: Feature Set
- Output Feature Class (Rings): Contains the output ring features. Type: Feature Class
- Range Ring Type: Specifies the method for creating the range rings. Options include Interval (default) and Minimum and Maximum. Type: String
- Output Feature Class (Radials) (Optional): Contains the output radial features. Type: Feature Class
- Number of Radials (Optional): The number of radials to generate. Type: Long
- Distance Units (Optional): Specifies the linear unit of measurement for the distance parameters. Options include Meters (default), Kilometers, Miles, Nautical miles, Feet, and US survey feet. Type: String
- Number of Rings (Optional): The number of rings to generate. Type: Long
- Interval Between Rings (Optional): The distance between rings. Type: Double

Derived Output:
- No derived outputs available.
Toolset: Statistics

Tool: Maximum

Description: The Maximum tool calculates the largest value for all records of the specified field within each bin. It is used to find the maximum value within each bin or area, providing insights into the spatial distribution of the data. For example, in a land cover classification analysis, the Maximum tool can help identify the predominant land cover type within each zone or region.

Parameters:
- Input Features: The features to be analyzed and aggregated.
- Output Feature Class: The feature class that will contain the aggregated features.
- Dissolve Fields (Optional): The field or fields on which features will be aggregated.
- Field Statistics Fields (Optional): Specifies the field or fields containing the attribute values used to calculate statistics like Maximum.
  - Sum: Adds the values for the specified field.
  - Mean: Calculates the average for the specified field.
  - Minimum: Identifies the smallest value of the specified field.
  - Maximum: Finds the largest value of the specified field.
  - Range: Calculates the range of values (maximum minus minimum) for the specified field.
  - Standard deviation: Determines the extent of value deviation in the specified field.
  - Count: Identifies the number of values in the specified field.
  - First: Uses the specified field value of the first record in the input.
  - Last: Uses the specified field value of the last record in the input.

Derived Output:
- Range: The difference between the largest and smallest value of all cells in the value raster that belong to the same zone as the output cell will be calculated.
- Standard deviation: The standard deviation of all cells in the value raster that belong to the same zone as the output cell will be calculated.
- Sum: The total value of all cells in the value raster that belong to the same zone as the output cell will be calculated.
- Variety: The number of unique values for all cells in the value raster that belong to the same zone as the output cell will be calculated.
- Minimum and Maximum: Both the minimum and maximum statistics will be calculated.
- Mean and Standard deviation: Both the mean and standard deviation statistics will be calculated.
- Minimum, Maximum, and Mean: The minimum, maximum, and mean statistics will be calculated.
- Majority value, count, and percentage: The majority value, count, and percentage statistics will be calculated.
- Minority value, count, and percentage: The minority value, count, and percentage statistics will be calculated.
No information available.
Toolset: Statistics

Tool: Variety

Description: The Statistics toolset contains tools that perform standard statistical analysis on attribute data. It includes calculations for mean, minimum, maximum, and standard deviation. These tools are essential for understanding data accuracy. For example, the Summarize Data toolset calculates total counts, lengths, areas, and basic descriptive statistics of features and their attributes within areas or near other features. Another tool, Summarize Attributes, calculates summary statistics for fields in a feature class.

Parameters:
- Count: Find the number of values included in statistical calculations. This counts each value except null values. Type: Integer.
- Mean: Calculate the average for the specified field. Type: Double.
- Median: Calculate the median for all records of the specified field. Type: Double.
- Maximum: Find the largest value for all records of the specified field. Type: Double.
- Minimum: Find the smallest value for all records of the specified field. Type: Double.
- Standard Deviation: Find the extent of value deviation in the specified field. Type: Double.
- Sum: Add the total value for the specified field. Type: Double.

Derived Output:
- Report: Summary statistics, along with the individual records in the report, combine to show the complete set of information for the layer or table on which you're reporting. Type: Table.
No information available.
Toolset: Statistics

Tool: Percentile

Description: The Percentile tool calculates the percentile value for a specified raster layer. By default, it calculates the 90th percentile but allows for customization from 0 to 100 using the Percentile Value parameter. This tool is essential for understanding data distribution and variability in spatial analysis workflows.

Parameters:
- Percentile Value: Specifies the percentile value to calculate. Default is 90, ranging from 0 to 100. Type: Double
- Percentile Interpolation Type: Specifies the interpolation method for percentile values falling between cell values. Options include Auto-detect, Nearest, and Linear. Type: String
- Process as Multidimensional: Specifies how input rasters are processed if multidimensional. Type: Boolean

Derived Output:
- No derived outputs available.
**Toolset:** Feature Class Toolset

**Tool:** Recalculate Feature Class Extent

**Description:**
The "Recalculate Feature Class Extent" tool recalculates the xy, z, and m extent properties of a feature class to ensure they accurately reflect the spatial boundaries of the features within the class. This recalculation is essential when the extent property does not match the actual spatial extent due to feature edits or additions/deletions. By updating these properties, spatial queries and operations dependent on the extent become more precise and efficient. For instance, when using a feature class in spatial queries or map displays, having an accurate extent enhances performance and result accuracy.

**Parameters:**
- No information available.

**Derived Output:**
- **Updated Extent Properties:** Recalculates and updates the xy, z, and m extent properties of the feature class. Type: Spatial Extent.
